name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Cancel previous jobs for the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # Can be blank, or one of: cpp, dart, go, julia, kotlin, nim, smt, vlang
  FOCUS: 'rust'
jobs:
  build:

    strategy:
      matrix:
        python-version:
          - '3.12'
        os:
          - ubuntu-24.04
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: cache virtualenv
        uses: actions/cache@v4
        id: cache-venv
        with:
          path: ./.venv/
          key: ${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-venv-${{ hashFiles('setup.py') }}
          restore-keys: |
            ${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-venv-

      - name: Install dependencies
        shell: bash
        run: |
          python -m venv ./.venv
          source ./.venv/bin/activate
          pip3 install .
        if: steps.cache-venv.outputs.cache-hit != 'true'

      - name: Install tox
        run: |
          pip3 --version
          pip3 install setuptools tox


      - name: Install rust nightly toolchain
        if: ${{ !env.FOCUS || env.FOCUS == 'rust' }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2024-01-01
          components: clippy,rustfmt

      - name: Run tox
        shell: bash
        run: |
          set -ex
          if [ "$RUNNER_OS" == "Windows" ]; then
            export PATH="$PATH:/C/Program Files/LLVM/bin:/tmp/v"
          fi
          PYTHON_VERSION="${{ matrix.python-version }}"
          export TOXENV="py${PYTHON_VERSION//.}"
          if [ "$FOCUS" ]; then
            tox -- -k "$FOCUS"
          else
            tox
          fi

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install linters
        run: pip install black cpplint isort pyflakes

      - name: Remove expected .py files
        run: rm tests/expected/*.py tests/dir_cases/test1-*-expected/*.py

      - name: Run isort
        run: isort --check --diff */ *.py

      - name: Run black
        run: black --check */ *.py

      - name: Remove test case .py files
        run: rm tests/cases/*.py

      - name: Run pyflakes
        run: pyflakes */ *.py
